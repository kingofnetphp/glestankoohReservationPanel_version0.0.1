import { EventEmitter } from '@angular/core';
import { LibRegisterPanelService } from './lib-register-panel.service';
import { LoadingBackdropService } from './loading-backdrop.service';
import { MatSnackBar } from '@angular/material/snack-bar';
import * as i0 from "@angular/core";
export declare class LibRegisterPanelComponent {
    private libRegisterPanelService;
    private loadingBackdropService;
    private snackBar;
    From_LibRegister_To_LibWizard: EventEmitter<any>;
    textconstants: {
        REGISTERFORMMOBILE: string;
        REGISTERFORMLABELNAME: string;
        REGISTERFORMLABELFAMIL: string;
        REGISTERMOBILESENDCODE: string;
        REGISTERFORMCODE: string;
        REGISTERMOBILERESEND: string;
        REGISTEREMPTYMOBILE: string;
        REGISTEREMPTYVALIDCODE: string;
        REGISTERMOBILEUNVALID: string;
        REGISTERMOBILEVALID: string;
        REGISTERFORMNAME: string;
        REGISTERFORMFAMIL: string;
        REGISTER_NameFAMIL_SUBMIT: string;
        REGISTERMOBILEREQUIRED: string;
        REGISTERFORMNAMEREQUIRED: string;
        REGISTERFORMFAMILREQUIRED: string;
        REGISTER_NAMEFAMIL_ERROR: string;
    };
    smsCanSend: boolean;
    registerIsComplate: boolean;
    codeCancheck: boolean;
    mobile: string;
    name: string;
    famil: string;
    validcode: string;
    validtext: string;
    hashdata: string;
    resend: boolean;
    personId: number;
    getNameFamil: boolean;
    constructor(libRegisterPanelService: LibRegisterPanelService, loadingBackdropService: LoadingBackdropService, snackBar: MatSnackBar);
    check(): void;
    is6Digit(e: any): void;
    checkvalchange(): void;
    checklen(e: any): void;
    CheckRequiredName(): boolean;
    CheckRequiredMobile(): boolean;
    SubmitNameFamil(): void;
    sendvalidcode(val: string): void;
    sendSms(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LibRegisterPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LibRegisterPanelComponent, "lib-LibRegisterPanel", never, {}, { "From_LibRegister_To_LibWizard": "From_LibRegister_To_LibWizard"; }, never, never, false>;
}
