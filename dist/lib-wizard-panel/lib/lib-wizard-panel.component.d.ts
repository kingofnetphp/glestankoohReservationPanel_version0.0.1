import { FormBuilder } from '@angular/forms';
import { BreakpointObserver } from '@angular/cdk/layout';
import { StepperOrientation } from '@angular/material/stepper';
import { Observable } from 'rxjs';
import { LoadingBackdropService } from './loading-backdrop.service';
import { EventEmitter } from '@angular/core';
import { LibWizardPanelService } from './lib-wizard-panel.service';
import { Bill, ChoicedCalender, Register } from './lib-wizard-panel-bill.model';
import { MatSnackBar } from '@angular/material/snack-bar';
import * as i0 from "@angular/core";
export declare class LibWizardPanelComponent {
    private loadingBackdropService;
    private libWizardPanelService;
    private _formBuilder;
    private snackBar;
    private myStepper?;
    firstFormGroup: import("@angular/forms").FormGroup<{
        firstCtrl: import("@angular/forms").FormControl<string>;
    }>;
    secondFormGroup: import("@angular/forms").FormGroup<{
        secondCtrl: import("@angular/forms").FormControl<string>;
    }>;
    thirdFormGroup: import("@angular/forms").FormGroup<{
        thirdCtrl: import("@angular/forms").FormControl<string>;
    }>;
    stepperOrientation: Observable<StepperOrientation>;
    textconst: {
        STEPPERRESERVATIONONE: string;
        STEPPERRESERVATIONNEXT: string;
        STEPPERRESERVATIONPREV: string;
        STEPPERRESERVATIONREGISTER: string;
        STEPPERRESERVATIONBILL: string;
        STEPPERRESERVATIONSUBMIT: string;
        STEPPERRESERVATIONFINISH: string;
        STEPPERRESNAME: string;
        STEPPERRESMOBILE: string;
        ISREGISTERED: string;
        NOTREGISTERED: string;
        NOTFINDNAMEFAMIL: string;
        REGISTERMOBILEREQUIRED: string;
        REGISTERFORMNAMEREQUIRED: string;
        REGISTERFORMFAMILREQUIRED: string;
    };
    title: string;
    RentItemID: number;
    Capacity: number;
    personId: number;
    TypeReserve2: number;
    IncomeReasonID: number;
    setDateToParent: EventEmitter<any>;
    isRegistered: number;
    goToRegisterLibrary: boolean;
    mobile: string;
    name: string;
    famil: string;
    allPrice: number;
    personPrice: number;
    exteraPerson: number;
    kidPrices: number;
    kidCount: number;
    exteraPersonPrice: number;
    countNight: number;
    countPerson: number;
    choicedCalender?: ChoicedCalender;
    bill: Bill;
    ReserveID: number;
    DocNo: number;
    ToalPrice: number;
    sumeriPersonPrice: any;
    constructor(loadingBackdropService: LoadingBackdropService, libWizardPanelService: LibWizardPanelService, _formBuilder: FormBuilder, breakpointObserver: BreakpointObserver, snackBar: MatSnackBar);
    CheckRequired(): boolean;
    goNextStep(): void;
    getDataFromRegisterToWizard(register: Register): void;
    getDataFromReservToWizard(bill: Bill): void;
    parseInt(num: any): number;
    mult(num1: any, num2: any): number;
    register(): void;
    complate(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LibWizardPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LibWizardPanelComponent, "lib-LibWizardPanel", never, { "RentItemID": "RentItemID"; "Capacity": "Capacity"; "personId": "personId"; "TypeReserve2": "TypeReserve2"; "IncomeReasonID": "IncomeReasonID"; }, { "setDateToParent": "setDateToParent"; }, never, never, false>;
}
